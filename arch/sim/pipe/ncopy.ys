#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	iaddq $-9,%rdx
	andq %rdx,%rdx		# len <= 0?
	jl Symbol	# if so, goto Done:

Loop:	mrmovq (%rdi), %r8	# read val from src...
	mrmovq 8(%rdi),%r9
	mrmovq 16(%rdi),%r10
	mrmovq 24(%rdi),%r11
	mrmovq 32(%rdi),%r12
	mrmovq 40(%rdi),%r13
	mrmovq 48(%rdi),%r14
	mrmovq 56(%rdi),%rcx
	mrmovq 64(%rdi),%rbx
	rmmovq %r8,(%rsi)
	rmmovq %r9,8(%rsi)
	rmmovq %r10,16(%rsi)
	rmmovq %r11,24(%rsi)
	rmmovq %r12,32(%rsi)
	rmmovq %r13,40(%rsi)
	rmmovq %r14,48(%rsi)
	rmmovq %rcx,56(%rsi)
	rmmovq %rbx,64(%rsi)
Loop1:	andq %r8,%r8
	jle Loop2
	iaddq $1,%rax
Loop2:	andq %r9, %r9		# val <= 0?
	jle Loop3		# if so, goto Npos:
	iaddq $1, %rax		# count++
Loop3:	andq %r10,%r10
        jle Loop4
        iaddq $1,%rax
Loop4:  andq %r11,%r11
        jle Loop5
        iaddq $1,%rax
Loop5:	andq %r12,%r12
        jle Loop6
        iaddq $1,%rax
Loop6: 	andq %r13,%r13
        jle Loop7
        iaddq $1,%rax
Loop7:  andq %r14,%r14
        jle Loop8
        iaddq $1,%rax
Loop8:  andq %rcx,%rcx
        jle Loop9
        iaddq $1,%rax
Loop9:  andq %rbx,%rbx
        jle Npos
        iaddq $1,%rax
Npos:	iaddq $72, %rdi		# src++
	iaddq $72, %rsi		# dst++
	iaddq $-9,%rdx
	jge Loop			# if so, goto Loop:
Symbol:	iaddq $6,%rdx
	jg right
	je rloop3
left:	iaddq $2,%rdx
	jl Done
	je rloop1
	iaddq $-1,%rdx
	je rloop2
right:	iaddq $-3,%rdx
	jl lt
	je rloop6
rt:	iaddq $-2,%rdx
	jl rloop7
	je rloop8
lt:	iaddq $1,%rdx
	je rloop5
	jmp rloop4
rloop8: mrmovq 56(%rdi),%r8
	andq %r8,%r8
	rmmovq %r8,56(%rsi)
rloop7: mrmovq 48(%rdi),%r8
        jle rloop72
        iaddq $1,%rax
rloop72:rmmovq %r8,48(%rsi)
        andq %r8,%r8
rloop6: mrmovq 40(%rdi),%r8
        jle rloop62
        iaddq $1,%rax
rloop62:rmmovq %r8,40(%rsi)
        andq %r8,%r8
rloop5: mrmovq 32(%rdi),%r8
        jle rloop52
        iaddq $1,%rax
rloop52:rmmovq %r8,32(%rsi)
        andq %r8,%r8
rloop4:	mrmovq 24(%rdi),%r8
	jle rloop42
	iaddq $1,%rax
rloop42:rmmovq %r8,24(%rsi)
	andq %r8,%r8
rloop3: mrmovq 16(%rdi),%r8
        jle rloop32
        iaddq $1,%rax
rloop32:rmmovq %r8,16(%rsi)
        andq %r8,%r8
rloop2: mrmovq 8(%rdi),%r8
        jle rloop22
        iaddq $1,%rax
rloop22:rmmovq %r8,8(%rsi)
        andq %r8,%r8
rloop1: mrmovq (%rdi),%r8
        jle rloop12
        iaddq $1,%rax
rloop12:rmmovq %r8,(%rsi)
        andq %r8,%r8
	jle Done
	iaddq $1,%rax
#remain:	mrmovq (%rdi),%r10
#	rmmovq %r10,(%rsi)
#	iaddq $8,%rdi
#	iaddq $8,%rsi
#	andq %r10,%r10
#	jle Rloop
#	iaddq $1,%rax
#Rloop:	iaddq $-1,%rdx
#	jge remain
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
